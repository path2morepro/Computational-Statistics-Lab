"0","g = function(x){"
"0","  gx = log(x + 1) / x ^ 1.5 + 1"
"0","  return(gx)"
"0","}"
"0",""
"0","dg = function(x){"
"0","  dux = 1 / (x+1)"
"0","  ux = log(x+1)"
"0","  dvx = 1.5 * sqrt(x)"
"0","  vx = x ^ 1.5 + 1"
"0","  dg = (dux*vx - dvx*ux) / (vx) ^ 2"
"0","  return(dg)"
"0","}"
"0",""
"0","estimate_d2g = function(xt, xt_1){"
"0","  return((dg(xt) - dg(xt_1)) / (xt - xt_1))"
"0","}"
"0",""
"0","bisection = function(a = 0.8, intervals, threshold) {"
"0","  est_list = vector(""list"", length(intervals))"
"0","  for (i in seq_along(intervals)) {"
"0","    b = a + intervals[i]"
"0","    mid = (a + b) / 2"
"0","    while (abs(a - b) > threshold) {"
"0","      xt = (a + b) / 2"
"0","      dgxt = dg(xt)"
"0","      dga = dg(a)"
"0","      dgb = dg(b)"
"0","      "
"0","      if (dga * dgxt <= 0) {"
"0","        b = xt"
"0","      } else if (dgb * dgxt < 0) {"
"0","        a = xt"
"0","      }"
"0","      "
"0","      if (abs(a - b) <= threshold) break"
"0","    }"
"0","    est_list[[i]] = (a + b) / 2"
"0","    "
"0","  }"
"0","  return(unlist(est_list))"
"0","}"
"0",""
"0","secant = function(start, threshold) {"
"0","  xt1_list = vector(""list"", length(start))"
"0","  for (x0 in start) {"
"0","    xt = x0"
"0","    xt_1 = x0 - threshold"
"0","    while (TRUE) {"
"0","      if(xt < 0){"
"0","        print(""second order derivatives is less than 0"")"
"0","        break"
"0","      }"
"0","      xt1 = xt - dg(xt) / estimate_d2g(xt, xt_1)"
"0","      if (abs(xt1 - xt) < threshold) {"
"0","        break"
"0","      }"
"0","      xt_1 = xt"
"0","      xt = xt1"
"0","    }"
"0","    xt1_list[[which(start == x0)]] = xt"
"0","  }"
"0","  return(unlist(xt1_list))"
"0","}"
"0",""
"0",""
