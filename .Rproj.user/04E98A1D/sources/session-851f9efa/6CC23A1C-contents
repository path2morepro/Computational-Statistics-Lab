---
title: "Lab1"
author: "Cui Qingxuan"
date: "`r Sys.Date()`"
output: pdf_document
---


```{r}
g = function(x){
  gx = log(x + 1) / x ^ 1.5 + 1
  return(gx)
}

dg = function(x){
  dux = 1 / (x+1)
  ux = log(x+1)
  dvx = 1.5 * sqrt(x)
  vx = x ^ 1.5 + 1
  dg = (dux*vx - dvx*ux) / (vx) ^ 2
  return(dg)
}

estimate_d2g = function(xt, xt_1){
  return((dg(xt) - dg(xt_1)) / (xt - xt_1))
}

bisection = function(a = 0.8, intervals, threshold) {
  est_list = vector("list", length(intervals))
  for (i in seq_along(intervals)) {
    b = a + intervals[i]
    mid = (a + b) / 2
    while (abs(a - b) > threshold) {
      xt = (a + b) / 2
      dgxt = dg(xt)
      dga = dg(a)
      dgb = dg(b)
      
      if (dga * dgxt <= 0) {
        b = xt
      } else if (dgb * dgxt < 0) {
        a = xt
      }
      
      if (abs(a - b) <= threshold) break
    }
    est_list[[i]] = (a + b) / 2
    
  }
  return(unlist(est_list))
}

secant = function(start, threshold) {
  xt1_list = vector("list", length(start))
  for (x0 in start) {
    xt = x0
    xt_1 = x0 - threshold
    while (TRUE) {
      if(xt < 0){
        print("second order derivatives is less than 0")
        break
      }
      xt1 = xt - dg(xt) / estimate_d2g(xt, xt_1)
      if (abs(xt1 - xt) < threshold) {
        break
      }
      xt_1 = xt
      xt = xt1
    }
    xt1_list[[which(start == x0)]] = xt
  }
  return(unlist(xt1_list))
}


```

```{r}
x = seq(from = 0, to = 4, by = 0.01)
gx = g(x)
plot(x=x, y=gx, type="l", col = "red",lwd = 5)
# points(x=est_secant, y=g(est_secant))

plot(x=x, y=dg(x), type = "l", col = "blue",lwd = 5)
abline(a = 0, b = 0, lwd = 3, lty = 3) 
# points(x=est_secant, y=dg(est_secant))
```

```{r}
intervals = seq(from = 0.2, to = 2, by = 0.1)
start = seq(from = 0.2, to = 1.3, by = 0.01)
est_bisection = bisection(intervals = intervals, threshold = 0.01)
est_secant = secant(start = start, threshold = 0.01)
```

